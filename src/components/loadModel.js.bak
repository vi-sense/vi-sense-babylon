 // https://github.com/Stuk/jszip/issues/375
            JSZip
            .loadAsync(file)
            .then(function (zip) {

                var entries = Object.keys(zip.files).map(function (name) {
                    return zip.files[name];
                });
                
                // 2.
                var listOfPromises = entries.map(function(entry) {
                    return entry.async("blob").then(function (blob) {
                    // we bind the two together to be able to match the name and the content in the last step
                    return [entry.name, blob];
                    });
                });
                
                // 3.
                var promiseOfList = Promise.all(listOfPromises);
                
                // 4.
                promiseOfList.then(function (list) {
                    // here, list is a list of [name, content]
                    // let's transform it into an object for easy access
                    var result = list.reduce(function (accumulator, current) {
                    var currentName = current[0];
                    var currentValue = current[1];
                    accumulator[currentName] = currentValue;
                    return accumulator;
                    }, {} /* initial value */);
                
                    console.log(result);
            
                    zip.file("scene.gltf") 
                    .async("string")
                    .then(function(gltfString){

                        for (var fileName of Object.keys(result)) {
                
                            let blolbDataURL = window.URL.createObjectURL(result[fileName]);
                            gltfString = gltfString.split(fileName).join(blolbDataURL)
                        }    
                        callback(gltfString)
                    })
                });
            })